<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C Sharp on Eddie Abbondanzio</title>
    <link>https://eddieabbondanz.io/categories/c-sharp/</link>
    <description>Recent content in C Sharp on Eddie Abbondanzio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Tue, 12 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://eddieabbondanz.io/categories/c-sharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Abusing C# For Loops For Job Security</title>
      <link>https://eddieabbondanz.io/post/c-sharp/abusing-for-loops-for-job-security/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://eddieabbondanz.io/post/c-sharp/abusing-for-loops-for-job-security/</guid>
      <description>Everyone knows good code is easy to maintain, but that also means anyone can maintain it. That&amp;rsquo;s no bueno for the individual developer who wants a little job security. Writing overly complex code that nobody else can maintain let alone read, will ensure your company holds onto you, and will give you more bargaining power come raise time.</description>
    </item>
    
    <item>
      <title>C# Threadable Queue</title>
      <link>https://eddieabbondanz.io/post/c-sharp/threadable-queue/</link>
      <pubDate>Wed, 09 May 2018 19:04:42 -0400</pubDate>
      
      <guid>https://eddieabbondanz.io/post/c-sharp/threadable-queue/</guid>
      <description>Implementing a Thread-Safe Queue One of the most useful data structures when it comes to multi-threading is the queue. However, queues in c# aren&amp;rsquo;t thread-safe by default. Thankfully it&amp;rsquo;s easy enough to implement your own as we will do today.</description>
    </item>
    
  </channel>
</rss>
